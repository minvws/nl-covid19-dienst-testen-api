name: PHP Linting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  composer-install:
    runs-on: ubuntu-20.04

    strategy:
      max-parallel: 3
      matrix:
        php-versions: [ '8.1', '8.2' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: zip
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

  php-linting-psalm:
    needs:
      - composer-install
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Generate _ide_helper file
        run: php artisan ide-helper:generate
      - name: Static analysis with Psalm
        run: vendor/bin/psalm
    strategy:
      max-parallel: 3
      matrix:
        php-versions: [ '8.1', '8.2' ]

  php-linting-psr12:
    needs:
      - composer-install
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Coding style PSR12 Check
        run: vendor/bin/phpcs
    strategy:
      max-parallel: 3
      matrix:
        php-versions: [ '8.1', '8.2' ]

  php-linting-stan:
    needs:
      - composer-install
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Copy .env
        run: cp -n .env.example .env
      - name: Generate key
        run: php artisan key:generate
      - name: Static analysis with PHPStan
        run: vendor/bin/phpstan analyse
    strategy:
      max-parallel: 3
      matrix:
        php-versions: [ '8.1', '8.2' ]

  php-linting-cve:
    needs:
      - composer-install
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Check for known CVE vulnerabilities
        run: php artisan security-check:now
    strategy:
      max-parallel: 3
      matrix:
        php-versions: [ '8.1', '8.2' ]
